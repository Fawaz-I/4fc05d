{"ast":null,"code":"import { mockBlueprintGraph } from '../mocks/mockData';\n\n// For development, we'll use mock data instead of making an actual API call\n// In a real application, we would use the actual API\n\n/**\n * Fetches the blueprint graph from the API\n */\nexport const fetchBlueprintGraph = async (tenantId, blueprintId, versionId) => {\n  // For development, we'll use mock data instead of making an actual API call\n  console.log(`Fetching blueprint graph for tenant: ${tenantId}, blueprint: ${blueprintId}, version: ${versionId}`);\n\n  // Simulating API delay\n  return new Promise(resolve => {\n    setTimeout(() => resolve(mockBlueprintGraph), 1000);\n  });\n\n  // Actual API call implementation (commented out for now)\n  /*\n  const API_BASE_URL = 'https://api.avantos-dev.io';\n  \n  try {\n    const response = await fetch(\n      `${API_BASE_URL}/api/v1/${tenantId}/actions/blueprints/${blueprintId}/${versionId}/graph`,\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    \n    if (!response.ok) {\n      throw new Error(`API request failed with status ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Failed to fetch blueprint graph:', error);\n    throw error;\n  }\n  */\n};","map":{"version":3,"names":["mockBlueprintGraph","fetchBlueprintGraph","tenantId","blueprintId","versionId","console","log","Promise","resolve","setTimeout"],"sources":["/Users/fawaz/dev/4fc05d/src/api/blueprintApi.ts"],"sourcesContent":["import { BlueprintGraphResponse } from '../types';\nimport { mockBlueprintGraph } from '../mocks/mockData';\n\n// For development, we'll use mock data instead of making an actual API call\n// In a real application, we would use the actual API\n\n/**\n * Fetches the blueprint graph from the API\n */\nexport const fetchBlueprintGraph = async (\n  tenantId: string,\n  blueprintId: string,\n  versionId: string\n): Promise<BlueprintGraphResponse> => {\n  // For development, we'll use mock data instead of making an actual API call\n  console.log(\n    `Fetching blueprint graph for tenant: ${tenantId}, blueprint: ${blueprintId}, version: ${versionId}`\n  );\n\n  // Simulating API delay\n  return new Promise((resolve) => {\n    setTimeout(() => resolve(mockBlueprintGraph), 1000);\n  });\n\n  // Actual API call implementation (commented out for now)\n  /*\n  const API_BASE_URL = 'https://api.avantos-dev.io';\n  \n  try {\n    const response = await fetch(\n      `${API_BASE_URL}/api/v1/${tenantId}/actions/blueprints/${blueprintId}/${versionId}/graph`,\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    \n    if (!response.ok) {\n      throw new Error(`API request failed with status ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Failed to fetch blueprint graph:', error);\n    throw error;\n  }\n  */\n};\n"],"mappings":"AACA,SAASA,kBAAkB,QAAQ,mBAAmB;;AAEtD;AACA;;AAEA;AACA;AACA;AACA,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CACjCC,QAAgB,EAChBC,WAAmB,EACnBC,SAAiB,KACmB;EACpC;EACAC,OAAO,CAACC,GAAG,CACT,wCAAwCJ,QAAQ,gBAAgBC,WAAW,cAAcC,SAAS,EACpG,CAAC;;EAED;EACA,OAAO,IAAIG,OAAO,CAAEC,OAAO,IAAK;IAC9BC,UAAU,CAAC,MAAMD,OAAO,CAACR,kBAAkB,CAAC,EAAE,IAAI,CAAC;EACrD,CAAC,CAAC;;EAEF;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}