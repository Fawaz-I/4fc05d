{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { fetchBlueprintGraph } from '../api/blueprintApi';\n/**\n * Hook to fetch and manage blueprint graph data\n */\nexport const useBlueprint = (tenantId, blueprintId, versionId) => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        const graphData = await fetchBlueprintGraph(tenantId, blueprintId, versionId);\n        setData(graphData);\n        setError(null);\n      } catch (err) {\n        setError(err instanceof Error ? err : new Error('Unknown error'));\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, [tenantId, blueprintId, versionId]);\n  return {\n    loading,\n    error,\n    data\n  };\n};\n_s(useBlueprint, \"KMBW5CMC4OuxvaG+0+h7ELERLWU=\");","map":{"version":3,"names":["useState","useEffect","fetchBlueprintGraph","useBlueprint","tenantId","blueprintId","versionId","_s","loading","setLoading","error","setError","data","setData","loadData","graphData","err","Error"],"sources":["/Users/fawaz/dev/4fc05d/src/hooks/useBlueprint.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchBlueprintGraph } from '../api/blueprintApi';\nimport { BlueprintGraphResponse } from '../types';\n\n/**\n * Hook to fetch and manage blueprint graph data\n */\nexport const useBlueprint = (\n  tenantId: string,\n  blueprintId: string,\n  versionId: string\n) => {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | null>(null);\n  const [data, setData] = useState<BlueprintGraphResponse | null>(null);\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setLoading(true);\n        const graphData = await fetchBlueprintGraph(\n          tenantId,\n          blueprintId,\n          versionId\n        );\n        setData(graphData);\n        setError(null);\n      } catch (err) {\n        setError(err instanceof Error ? err : new Error('Unknown error'));\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadData();\n  }, [tenantId, blueprintId, versionId]);\n\n  return { loading, error, data };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,mBAAmB,QAAQ,qBAAqB;AAGzD;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAGA,CAC1BC,QAAgB,EAChBC,WAAmB,EACnBC,SAAiB,KACd;EAAAC,EAAA;EACH,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAe,IAAI,CAAC;EACtD,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAgC,IAAI,CAAC;EAErEC,SAAS,CAAC,MAAM;IACd,MAAMa,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACFL,UAAU,CAAC,IAAI,CAAC;QAChB,MAAMM,SAAS,GAAG,MAAMb,mBAAmB,CACzCE,QAAQ,EACRC,WAAW,EACXC,SACF,CAAC;QACDO,OAAO,CAACE,SAAS,CAAC;QAClBJ,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZL,QAAQ,CAACK,GAAG,YAAYC,KAAK,GAAGD,GAAG,GAAG,IAAIC,KAAK,CAAC,eAAe,CAAC,CAAC;MACnE,CAAC,SAAS;QACRR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACV,QAAQ,EAAEC,WAAW,EAAEC,SAAS,CAAC,CAAC;EAEtC,OAAO;IAAEE,OAAO;IAAEE,KAAK;IAAEE;EAAK,CAAC;AACjC,CAAC;AAACL,EAAA,CA/BWJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}