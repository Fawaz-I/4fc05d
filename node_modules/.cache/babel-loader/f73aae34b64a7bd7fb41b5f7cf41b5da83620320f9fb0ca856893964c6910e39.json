{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { updateMapping, removeMapping, findFieldMapping, getFormMappings as getFormMappingsService } from '../services/prefillService';\n\n/**\n * Hook to manage prefill mapping state\n */\nexport const usePrefillMapping = (initialMappings = []) => {\n  _s();\n  const [mappings, setMappings] = useState(initialMappings);\n  const addOrUpdateMapping = (targetFormId, targetField, sourceType, sourceFormId, sourceField) => {\n    setMappings(prevMappings => updateMapping(prevMappings, targetFormId, targetField, sourceType, sourceFormId, sourceField));\n  };\n  const deleteMapping = (targetFormId, targetField) => {\n    setMappings(prevMappings => removeMapping(prevMappings, targetFormId, targetField));\n  };\n  const getMapping = (targetFormId, targetField) => {\n    return findFieldMapping(mappings, targetFormId, targetField);\n  };\n  const getFormMappings = targetFormId => {\n    return getFormMappingsService(mappings, targetFormId);\n  };\n  return {\n    mappings,\n    addOrUpdateMapping,\n    deleteMapping,\n    getMapping,\n    getFormMappings\n  };\n};\n_s(usePrefillMapping, \"HTahpdhtzwohfnZmAtEzx4pNG84=\");","map":{"version":3,"names":["useState","updateMapping","removeMapping","findFieldMapping","getFormMappings","getFormMappingsService","usePrefillMapping","initialMappings","_s","mappings","setMappings","addOrUpdateMapping","targetFormId","targetField","sourceType","sourceFormId","sourceField","prevMappings","deleteMapping","getMapping"],"sources":["/Users/fawaz/dev/4fc05d/src/hooks/usePrefillMapping.ts"],"sourcesContent":["import { useState } from 'react';\nimport { PrefillMapping, FieldMapping } from '../types';\nimport {\n  updateMapping,\n  removeMapping,\n  findFieldMapping,\n  getFormMappings as getFormMappingsService,\n} from '../services/prefillService';\n\n/**\n * Hook to manage prefill mapping state\n */\nexport const usePrefillMapping = (initialMappings: PrefillMapping[] = []) => {\n  const [mappings, setMappings] = useState<PrefillMapping[]>(initialMappings);\n\n  const addOrUpdateMapping = (\n    targetFormId: string,\n    targetField: string,\n    sourceType: 'form' | 'global',\n    sourceFormId: string | undefined,\n    sourceField: string\n  ) => {\n    setMappings((prevMappings) =>\n      updateMapping(\n        prevMappings,\n        targetFormId,\n        targetField,\n        sourceType,\n        sourceFormId,\n        sourceField\n      )\n    );\n  };\n\n  const deleteMapping = (targetFormId: string, targetField: string) => {\n    setMappings((prevMappings) =>\n      removeMapping(prevMappings, targetFormId, targetField)\n    );\n  };\n\n  const getMapping = (\n    targetFormId: string,\n    targetField: string\n  ): FieldMapping | undefined => {\n    return findFieldMapping(mappings, targetFormId, targetField);\n  };\n\n  const getFormMappings = (targetFormId: string) => {\n    return getFormMappingsService(mappings, targetFormId);\n  };\n\n  return {\n    mappings,\n    addOrUpdateMapping,\n    deleteMapping,\n    getMapping,\n    getFormMappings,\n  };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,SACEC,aAAa,EACbC,aAAa,EACbC,gBAAgB,EAChBC,eAAe,IAAIC,sBAAsB,QACpC,4BAA4B;;AAEnC;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,eAAiC,GAAG,EAAE,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAmBO,eAAe,CAAC;EAE3E,MAAMI,kBAAkB,GAAGA,CACzBC,YAAoB,EACpBC,WAAmB,EACnBC,UAA6B,EAC7BC,YAAgC,EAChCC,WAAmB,KAChB;IACHN,WAAW,CAAEO,YAAY,IACvBhB,aAAa,CACXgB,YAAY,EACZL,YAAY,EACZC,WAAW,EACXC,UAAU,EACVC,YAAY,EACZC,WACF,CACF,CAAC;EACH,CAAC;EAED,MAAME,aAAa,GAAGA,CAACN,YAAoB,EAAEC,WAAmB,KAAK;IACnEH,WAAW,CAAEO,YAAY,IACvBf,aAAa,CAACe,YAAY,EAAEL,YAAY,EAAEC,WAAW,CACvD,CAAC;EACH,CAAC;EAED,MAAMM,UAAU,GAAGA,CACjBP,YAAoB,EACpBC,WAAmB,KACU;IAC7B,OAAOV,gBAAgB,CAACM,QAAQ,EAAEG,YAAY,EAAEC,WAAW,CAAC;EAC9D,CAAC;EAED,MAAMT,eAAe,GAAIQ,YAAoB,IAAK;IAChD,OAAOP,sBAAsB,CAACI,QAAQ,EAAEG,YAAY,CAAC;EACvD,CAAC;EAED,OAAO;IACLH,QAAQ;IACRE,kBAAkB;IAClBO,aAAa;IACbC,UAAU;IACVf;EACF,CAAC;AACH,CAAC;AAACI,EAAA,CA9CWF,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}