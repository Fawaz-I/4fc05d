{"ast":null,"code":"var _jsxFileName = \"/Users/fawaz/dev/4fc05d/src/components/PrefillMapping/PrefillMappingPanel.tsx\";\nimport React from 'react';\nimport PrefillField from './PrefillField';\nimport { extractFormFields, getFormById } from '../../services/graphService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrefillMappingPanel = ({\n  graph,\n  selectedFormId,\n  mappings,\n  onOpenMapping,\n  onRemoveMapping\n}) => {\n  // Find the selected form\n  const selectedForm = getFormById(graph, selectedFormId);\n  if (!selectedForm) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '16px',\n        color: '#666'\n      },\n      children: \"Select a form to configure prefills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Extract fields from the form\n  const fields = extractFormFields(selectedForm);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '16px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginBottom: '16px',\n        borderBottom: '1px solid #eee',\n        paddingBottom: '8px'\n      },\n      children: [\"Prefill fields for \", selectedForm.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), fields.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: '#666'\n      },\n      children: \"This form has no fields to configure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: fields.map(field => /*#__PURE__*/_jsxDEV(PrefillField, {\n        field: field,\n        mapping: mappings[field.id],\n        onEdit: () => onOpenMapping(field.id),\n        onRemove: () => onRemoveMapping(field.id)\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_c = PrefillMappingPanel;\nexport default PrefillMappingPanel;\nvar _c;\n$RefreshReg$(_c, \"PrefillMappingPanel\");","map":{"version":3,"names":["React","PrefillField","extractFormFields","getFormById","jsxDEV","_jsxDEV","PrefillMappingPanel","graph","selectedFormId","mappings","onOpenMapping","onRemoveMapping","selectedForm","style","padding","color","children","fileName","_jsxFileName","lineNumber","columnNumber","fields","marginBottom","borderBottom","paddingBottom","name","length","map","field","mapping","id","onEdit","onRemove","_c","$RefreshReg$"],"sources":["/Users/fawaz/dev/4fc05d/src/components/PrefillMapping/PrefillMappingPanel.tsx"],"sourcesContent":["import React from 'react';\nimport { BlueprintGraphResponse } from '../../types';\nimport PrefillField from './PrefillField';\nimport { extractFormFields, getFormById } from '../../services/graphService';\n\ninterface PrefillMappingPanelProps {\n  graph: BlueprintGraphResponse;\n  selectedFormId: string;\n  mappings: Record<\n    string,\n    {\n      sourceType: 'form' | 'global';\n      sourceFormId?: string;\n      sourceField: string;\n    }\n  >;\n  onOpenMapping: (fieldId: string) => void;\n  onRemoveMapping: (fieldId: string) => void;\n}\n\nconst PrefillMappingPanel: React.FC<PrefillMappingPanelProps> = ({\n  graph,\n  selectedFormId,\n  mappings,\n  onOpenMapping,\n  onRemoveMapping,\n}) => {\n  // Find the selected form\n  const selectedForm = getFormById(graph, selectedFormId);\n\n  if (!selectedForm) {\n    return (\n      <div style={{ padding: '16px', color: '#666' }}>\n        Select a form to configure prefills\n      </div>\n    );\n  }\n\n  // Extract fields from the form\n  const fields = extractFormFields(selectedForm);\n\n  return (\n    <div style={{ padding: '16px' }}>\n      <h3\n        style={{\n          marginBottom: '16px',\n          borderBottom: '1px solid #eee',\n          paddingBottom: '8px',\n        }}\n      >\n        Prefill fields for {selectedForm.name}\n      </h3>\n\n      {fields.length === 0 ? (\n        <div style={{ color: '#666' }}>\n          This form has no fields to configure\n        </div>\n      ) : (\n        <div>\n          {fields.map((field) => (\n            <PrefillField\n              key={field.id}\n              field={field}\n              mapping={mappings[field.id]}\n              onEdit={() => onOpenMapping(field.id)}\n              onRemove={() => onRemoveMapping(field.id)}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PrefillMappingPanel;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,iBAAiB,EAAEC,WAAW,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiB7E,MAAMC,mBAAuD,GAAGA,CAAC;EAC/DC,KAAK;EACLC,cAAc;EACdC,QAAQ;EACRC,aAAa;EACbC;AACF,CAAC,KAAK;EACJ;EACA,MAAMC,YAAY,GAAGT,WAAW,CAACI,KAAK,EAAEC,cAAc,CAAC;EAEvD,IAAI,CAACI,YAAY,EAAE;IACjB,oBACEP,OAAA;MAAKQ,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAC,QAAA,EAAC;IAEhD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;;EAEA;EACA,MAAMC,MAAM,GAAGnB,iBAAiB,CAACU,YAAY,CAAC;EAE9C,oBACEP,OAAA;IAAKQ,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAE,QAAA,gBAC9BX,OAAA;MACEQ,KAAK,EAAE;QACLS,YAAY,EAAE,MAAM;QACpBC,YAAY,EAAE,gBAAgB;QAC9BC,aAAa,EAAE;MACjB,CAAE;MAAAR,QAAA,GACH,qBACoB,EAACJ,YAAY,CAACa,IAAI;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EAEJC,MAAM,CAACK,MAAM,KAAK,CAAC,gBAClBrB,OAAA;MAAKQ,KAAK,EAAE;QAAEE,KAAK,EAAE;MAAO,CAAE;MAAAC,QAAA,EAAC;IAE/B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAENf,OAAA;MAAAW,QAAA,EACGK,MAAM,CAACM,GAAG,CAAEC,KAAK,iBAChBvB,OAAA,CAACJ,YAAY;QAEX2B,KAAK,EAAEA,KAAM;QACbC,OAAO,EAAEpB,QAAQ,CAACmB,KAAK,CAACE,EAAE,CAAE;QAC5BC,MAAM,EAAEA,CAAA,KAAMrB,aAAa,CAACkB,KAAK,CAACE,EAAE,CAAE;QACtCE,QAAQ,EAAEA,CAAA,KAAMrB,eAAe,CAACiB,KAAK,CAACE,EAAE;MAAE,GAJrCF,KAAK,CAACE,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACa,EAAA,GApDI3B,mBAAuD;AAsD7D,eAAeA,mBAAmB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}